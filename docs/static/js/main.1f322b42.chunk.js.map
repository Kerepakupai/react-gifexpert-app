{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","c","action","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","img","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAmBhD,OACE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAEFC,QAAQC,IAAI,UAERN,EAAWO,OAAOC,OAAS,IAC7BV,GAAc,SAACW,GAAD,OAAQT,GAAR,mBAAsBS,OACpCR,EAAc,MAKcS,OAAO,GAArC,SACE,uBACEC,KAAK,OACLC,YAAY,oBACZC,MAAOb,EACPc,SAtBoB,SAACX,GACzBE,QAAQC,IAAIH,EAAEY,OAAOF,OACrBZ,EAAcE,EAAEY,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,gDACgCC,UACnDH,GAFmB,+DAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZjB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGnC,OAFAd,QAAQC,IAAIuB,GAGV,sBAAKI,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdlB,mBAAS,CACjCyB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GAEtBC,YAAW,WACTJ,EAAS,CACPf,KAAMkB,EACNL,SAAS,MAEV,UAGJ,CAACpB,IAEGqB,EDjB2BM,CAAa3B,GAAjCa,EADyB,EAC/BN,KAAca,EADiB,EACjBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GACC,oBAAIJ,UAAU,uCAAd,qBAGF,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACmB,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIjB,aEbnBkB,EAAgB,WAAO,IAAD,EACG/C,mBAAS,CAAC,cADb,mBAC1BgD,EAD0B,KACdjD,EADc,KAYjC,OACE,eAAC,WAAD,WACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACGiD,EAAWrB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCjBxB+B,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.1f322b42.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    console.log(e.target.value);\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    console.log(\"Submit\");\n\n    if (inputValue.trim().length > 2) {\n      setCategories((c) => [inputValue,...c]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} action=\"\">\n      <input\n        type=\"text\"\n        placeholder=\"Ingrese categoria\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n  const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=GolCAa2Uss2KE4AgpscqKpFj9kjlAEpF`;\n\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((gif) => {\n    return {\n      id: gif.id,\n      title: gif.title,\n      url: gif.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from \"react\";\n\nexport const GifGridItem = ({ title, url }) => {\n  console.log(title);\n\n  return (\n    <div className=\"card animate__animated animate__bounce\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__bounce\">{category}</h3>\n\n      {loading && (\n        <h2 className=\"animate__animated animate__heartBeat\">Loading</h2>\n      )}\n\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      \n      setTimeout(() => {\n        setState({\n          data: imgs,\n          loading: false,\n        });\n      }, 3000);\n      \n    });\n  }, [category]);\n\n  return state;\n};\n","import { Fragment, React, useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GiftExpertApp = () => {\n  const [categories, setCategories] = useState([\"One Punch\"]);\n\n  /*\n  const handleAdd = () => {\n    // setCategories([...categories, \"Spiderman\"]);\n\n    // Callback: Recibe el estado anterior\n    setCategories((c) => [...c, \"HunterXHunter\"]);\n  };\n  */\n\n  return (\n    <Fragment>\n      <h2>GiftExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </Fragment>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { GiftExpertApp } from \"./GiftExpertApp\";\n\nimport \"./index.css\";\n\nReactDOM.render(<GiftExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}